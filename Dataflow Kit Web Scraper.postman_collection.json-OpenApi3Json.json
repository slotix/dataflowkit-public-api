{
  "openapi": "3.0.0",
  "info": {
    "title": "Dataflow Kit Web Scraper",
    "description": "Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you. \n\n- Build a custom web scraper with our Visual point-&-click toolkit.\n- Scrape the most popular Search engines result pages (SERP).\n- Convert web pages to PDF and capture screenshots.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.dataflowkit.com/v1",
      "variables": {}
    }
  ],
  "paths": {
    "/fetch": {
      "post": {
        "tags": [
          "Misc"
        ],
        "summary": "fetch",
        "description": "Dataflow Kit API needs to be authenticated by passing a secret API Key to all API requests to the server as the `api_key` query parameter.\nThe API Key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.\n\n## Payload\n\nParameter|Description\n---|---\n**type** | If set to `base`, the Base fetcher is used for downloading web page content. Use `chrome` for fetching content with a Headless chrome browser.\n**url** | Specify URL to download.\n**proxy**| Specify proxy by adding [country ISO code](https://en.wikipedia.org/wiki/ISO_3166-2) to use a geolocated proxy in the specified country. Examples: `country-sk`, `country-de`, `country-cn`. Or use `country-any` to use random geo-targets.\n**waitDelay** | Specify a wait delay (in seconds). This may be useful if certain elements of the web site need to be rendered after the initial page load. _(Chrome fetcher type only)_\n**actions** | Use actions to automate manual workflows while rendering web pages. They simulate real-world human interaction with pages. _(Chrome fetcher type only)_\n\n### Actions\n\nType | Description\n---|---\n**Input**| Specify `Input CSS Selector` and `Input Text` to perform search queries, or fill forms.\n**Click** | Click on an element with the specified `CSS Selector`.\n**Wait** | Wait for the specific DOM elements you want to manipulate.\n**Scroll** | Automatically scroll a page down to load more content, simulating user interaction with infinite scrolled pages.",
        "operationId": "fetch",
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "description": "Authenticate Dataflow Kit API with api_key",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fetchrequest"
              },
              "example": {
                "proxy": "country-any",
                "type": "base",
                "url": "https://ipapi.co/json/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "openresty/1.15.8.2"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 01 May 2020 22:53:20 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15724800; includeSubDomains"
                  }
                }
              },
              "Access-Control-Allow-Origin": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "*"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string",
                  "example": "<html>\n    <head></head>\n    <body>{\n    &#34;ip&#34;: &#34;178.171.21.156&#34;,\n    &#34;city&#34;: &#34;Singapore&#34;,\n    &#34;region&#34;: null,\n    &#34;region_code&#34;: null,\n    &#34;country&#34;: &#34;SG&#34;,\n    &#34;country_code&#34;: &#34;SG&#34;,\n    &#34;country_code_iso3&#34;: &#34;SGP&#34;,\n    &#34;country_capital&#34;: &#34;Singapore&#34;,\n    &#34;country_tld&#34;: &#34;.sg&#34;,\n    &#34;country_name&#34;: &#34;Singapore&#34;,\n    &#34;continent_code&#34;: &#34;AS&#34;,\n    &#34;in_eu&#34;: false,\n    &#34;postal&#34;: &#34;18&#34;,\n    &#34;latitude&#34;: 1.2929,\n    &#34;longitude&#34;: 103.8547,\n    &#34;timezone&#34;: &#34;Asia/Singapore&#34;,\n    &#34;utc_offset&#34;: &#34;+0800&#34;,\n    &#34;country_calling_code&#34;: &#34;+65&#34;,\n    &#34;currency&#34;: &#34;SGD&#34;,\n    &#34;currency_name&#34;: &#34;Dollar&#34;,\n    &#34;languages&#34;: &#34;cmn,en-SG,ms-SG,ta-SG,zh-SG&#34;,\n    &#34;country_area&#34;: 692.7,\n    &#34;country_population&#34;: 4701069.0,\n    &#34;asn&#34;: &#34;AS9009&#34;,\n    &#34;org&#34;: &#34;M247 Ltd&#34;\n}</body>\n</html>"
                },
                "example": "<html>\n    <head></head>\n    <body>{\n    &#34;ip&#34;: &#34;178.171.21.156&#34;,\n    &#34;city&#34;: &#34;Singapore&#34;,\n    &#34;region&#34;: null,\n    &#34;region_code&#34;: null,\n    &#34;country&#34;: &#34;SG&#34;,\n    &#34;country_code&#34;: &#34;SG&#34;,\n    &#34;country_code_iso3&#34;: &#34;SGP&#34;,\n    &#34;country_capital&#34;: &#34;Singapore&#34;,\n    &#34;country_tld&#34;: &#34;.sg&#34;,\n    &#34;country_name&#34;: &#34;Singapore&#34;,\n    &#34;continent_code&#34;: &#34;AS&#34;,\n    &#34;in_eu&#34;: false,\n    &#34;postal&#34;: &#34;18&#34;,\n    &#34;latitude&#34;: 1.2929,\n    &#34;longitude&#34;: 103.8547,\n    &#34;timezone&#34;: &#34;Asia/Singapore&#34;,\n    &#34;utc_offset&#34;: &#34;+0800&#34;,\n    &#34;country_calling_code&#34;: &#34;+65&#34;,\n    &#34;currency&#34;: &#34;SGD&#34;,\n    &#34;currency_name&#34;: &#34;Dollar&#34;,\n    &#34;languages&#34;: &#34;cmn,en-SG,ms-SG,ta-SG,zh-SG&#34;,\n    &#34;country_area&#34;: 692.7,\n    &#34;country_population&#34;: 4701069.0,\n    &#34;asn&#34;: &#34;AS9009&#34;,\n    &#34;org&#34;: &#34;M247 Ltd&#34;\n}</body>\n</html>"
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "fetchrequest": {
        "title": "fetchrequest",
        "required": [
          "proxy",
          "type",
          "url"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "proxy": "country-any",
          "type": "base",
          "url": "https://ipapi.co/json/"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Misc",
      "description": ""
    }
  ]
}